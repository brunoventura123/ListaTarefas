{"version":3,"sources":["App.styles.ts","components/ListItem/styles.ts","components/ListItem/index.tsx","components/AddArea/styles.ts","components/AddArea/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Container","styled","div","Area","Header","h1","done","ListItem","item","onChange","type","checked","e","id","target","name","AddArea","onEnter","useState","inputText","setInputText","className","placeholder","value","onKeyUp","code","App","list","setList","handleTaskChange","newList","i","taskName","push","length","map","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAEaA,EAAYC,IAAOC,IAAV,uGAKTC,EAAOF,IAAOC,IAAV,uFAKJE,EAASH,IAAOI,GAAV,iKCRNL,EAAYC,IAAOC,KAAI,gBAAEI,EAAF,EAAEA,KAAF,6NAWVA,EAAK,eAAe,UAXV,yG,OCIvBC,EAAW,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,SAC7B,OACI,eAAC,EAAD,CAAaH,KAAME,EAAKF,KAAxB,UACI,uBACII,KAAK,WACLC,QAASH,EAAKF,KACdG,SAAU,SAAAG,GAAC,OAAIH,EAASD,EAAKK,GAAID,EAAEE,OAAOH,YAE9C,gCAAQH,EAAKO,WCdZf,EAAYC,IAAOC,IAAV,gXCKTc,EAAU,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,QACrB,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAQA,OACI,eAAC,EAAD,WACI,qBAAKC,UAAU,QAAf,oBACA,uBACIX,KAAK,OACLY,YAAY,sBACZC,MAAOJ,EACPV,SAAU,SAAAG,GAAC,OAAEQ,EAAaR,EAAEE,OAAOS,QACnCC,QAdQ,SAACZ,GACH,UAAXA,EAAEa,MAAkC,KAAdN,IACrBF,EAAQE,GACRC,EAAa,YCsCVM,EA7CH,WAEV,MAAwBR,mBAAiB,IAAzC,mBAAOS,EAAP,KAAaC,EAAb,KAYMC,EAAmB,SAAChB,EAAYP,GACpC,IAAIwB,EAAO,YAAOH,GAClB,IAAI,IAAII,KAAKD,EACRA,EAAQC,GAAGlB,KAAOA,IACnBiB,EAAQC,GAAGzB,KAAOA,GAGtBsB,EAAQE,IAGV,OACE,cAAC,EAAD,UACE,eAAC,EAAD,WACE,cAAC,EAAD,gCAIE,cAAC,EAAD,CAASb,QA1BK,SAACe,GACrB,IAAIF,EAAO,YAAOH,GAClBG,EAAQG,KAAK,CACXpB,GAAGc,EAAKO,OAAS,EACjBnB,KAAKiB,EACL1B,MAAK,IAEPsB,EAAQE,MAqBHH,EAAKQ,KAAI,SAAC3B,EAAM4B,GAAP,OACR,cAAC,EAAD,CAEE5B,KAAMA,EACNC,SAAUoB,GAFLO,YC3BFC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e21165a6.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n    background-color: #17181f;\r\n    color:#797a81;\r\n    min-height:100vh;\r\n`\r\nexport const Area = styled.div`\r\n    margin:auto;\r\n    max-width:980px;\r\n    padding:10px;\r\n`\r\nexport const Header = styled.h1`\r\n    margin:0;\r\n    padding:0;\r\n    color:#fff;\r\n    text-align:center;\r\n    border-bottom:1px solid #444;\r\n    padding-bottom:20px;\r\n`","import styled from \"styled-components\";\r\ntype ContainerProps = {\r\n    done:boolean\r\n}\r\nexport const Container = styled.div(({done}:ContainerProps)=>(\r\n    `\r\n    display:flex;\r\n    align-items:center;\r\n    background-color:#20212c;\r\n    padding:10px;\r\n    border-radius:10px;\r\n    margin-bottom:10px;\r\n\r\n    label{\r\n        color:#ccc;\r\n        text-decoration:${done?'line-through':'initial'}\r\n    }\r\n    input{\r\n        width:25px;\r\n        height:25px;\r\n        margin-right:5px;\r\n    }\r\n`\r\n))","import * as C from './styles';\r\nimport { Item } from '../../types/Item';\r\n\r\ntype Props = {\r\n    item: Item,\r\n    onChange: (id: number, done: boolean) => void\r\n}\r\n\r\nexport const ListItem = ({ item, onChange }: Props) => {\r\n    return (\r\n        <C.Container done={item.done}>\r\n            <input\r\n                type=\"checkbox\"\r\n                checked={item.done}\r\n                onChange={e => onChange(item.id, e.target.checked)}\r\n            />\r\n            <label>{item.name}</label>\r\n        </C.Container>\r\n    );\r\n}","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n    display:flex;\r\n    align-items:center;\r\n    border:1px solid #555;\r\n    border-radius:15px;\r\n    padding:10px;\r\n    margin:20px 0;\r\n\r\n    .image{\r\n        margin-right:5px;\r\n    }\r\n    input {\r\n        border:0;\r\n        background:transparent;\r\n        outline:0;\r\n        color:#fff;\r\n        font-size:18px;\r\n        flex:1;\r\n    }\r\n`","import { Container } from \"./styles\";\r\nimport { useState, KeyboardEvent } from \"react\";\r\n\r\ntype Props = {\r\n    onEnter:(taskName:string) => void\r\n}\r\n\r\nexport const AddArea = ({onEnter}:Props) =>{\r\n    const [inputText, setInputText] = useState('')\r\n\r\n    const handleKeyUp = (e:KeyboardEvent)=>{\r\n        if(e.code === 'Enter' && inputText !== ''){\r\n            onEnter(inputText)\r\n            setInputText('')\r\n        }\r\n    }\r\n    return (\r\n        <Container>\r\n            <div className='image'>âž•</div>\r\n            <input \r\n                type=\"text\"\r\n                placeholder=\"Adicione uma tarefa\"\r\n                value={inputText}\r\n                onChange={e=>setInputText(e.target.value)}\r\n                onKeyUp={handleKeyUp}\r\n            />\r\n        </Container>\r\n    )\r\n}","import React, {useState} from \"react\"\nimport * as C from \"./App.styles\"\nimport { Item } from \"./types/Item\"\nimport { ListItem } from \"./components/ListItem\"\nimport { AddArea } from \"./components/AddArea\"\n\nconst App = ()=>{\n\n  const [list, setList] = useState<Item[]>([\n  ])\n\n  const handleAddTask = (taskName:string)=>{\n    let newList = [...list]\n    newList.push({\n      id:list.length + 1,\n      name:taskName,\n      done:false\n    })\n    setList(newList)\n  }\n  const handleTaskChange = (id: number, done: boolean) => {\n    let newList = [...list];\n    for(let i in newList) {\n      if(newList[i].id === id) {\n        newList[i].done = done;\n      }\n    }\n    setList(newList);\n  }\n\n  return (\n    <C.Container>\n      <C.Area>\n        <C.Header>\n          LISTA DE TAREFAS!\n        </C.Header>\n\n          <AddArea onEnter={handleAddTask}/>\n\n        {list.map((item, index)=>\n          <ListItem \n            key={index} \n            item={item}\n            onChange={handleTaskChange}\n            />\n        )}\n      </C.Area>\n    </C.Container>\n  )\n}\n\nexport default App","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}